// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/dbstream.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DatabaseEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*DatabaseEvent_Status
	//	*DatabaseEvent_SnapshotBegin
	//	*DatabaseEvent_PageBegin
	//	*DatabaseEvent_SnapshotRow
	//	*DatabaseEvent_PageEnd
	//	*DatabaseEvent_SnapshotEnd
	//	*DatabaseEvent_SnapshotFailure
	//	*DatabaseEvent_Begin
	//	*DatabaseEvent_Change
	//	*DatabaseEvent_Commit
	EventType     isDatabaseEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseEvent) Reset() {
	*x = DatabaseEvent{}
	mi := &file_proto_dbstream_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseEvent) ProtoMessage() {}

func (x *DatabaseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseEvent.ProtoReflect.Descriptor instead.
func (*DatabaseEvent) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{0}
}

func (x *DatabaseEvent) GetEventType() isDatabaseEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *DatabaseEvent) GetStatus() *StreamStatus {
	if x != nil {
		if x, ok := x.EventType.(*DatabaseEvent_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *DatabaseEvent) GetSnapshotBegin() *SnapshotBegin {
	if x != nil {
		if x, ok := x.EventType.(*DatabaseEvent_SnapshotBegin); ok {
			return x.SnapshotBegin
		}
	}
	return nil
}

func (x *DatabaseEvent) GetPageBegin() *SnapshotPageBegin {
	if x != nil {
		if x, ok := x.EventType.(*DatabaseEvent_PageBegin); ok {
			return x.PageBegin
		}
	}
	return nil
}

func (x *DatabaseEvent) GetSnapshotRow() *SnapshotRow {
	if x != nil {
		if x, ok := x.EventType.(*DatabaseEvent_SnapshotRow); ok {
			return x.SnapshotRow
		}
	}
	return nil
}

func (x *DatabaseEvent) GetPageEnd() *SnapshotPageEnd {
	if x != nil {
		if x, ok := x.EventType.(*DatabaseEvent_PageEnd); ok {
			return x.PageEnd
		}
	}
	return nil
}

func (x *DatabaseEvent) GetSnapshotEnd() *SnapshotEnd {
	if x != nil {
		if x, ok := x.EventType.(*DatabaseEvent_SnapshotEnd); ok {
			return x.SnapshotEnd
		}
	}
	return nil
}

func (x *DatabaseEvent) GetSnapshotFailure() *SnapshotFailure {
	if x != nil {
		if x, ok := x.EventType.(*DatabaseEvent_SnapshotFailure); ok {
			return x.SnapshotFailure
		}
	}
	return nil
}

func (x *DatabaseEvent) GetBegin() *TransactionBegin {
	if x != nil {
		if x, ok := x.EventType.(*DatabaseEvent_Begin); ok {
			return x.Begin
		}
	}
	return nil
}

func (x *DatabaseEvent) GetChange() *ChangeEvent {
	if x != nil {
		if x, ok := x.EventType.(*DatabaseEvent_Change); ok {
			return x.Change
		}
	}
	return nil
}

func (x *DatabaseEvent) GetCommit() *TransactionCommit {
	if x != nil {
		if x, ok := x.EventType.(*DatabaseEvent_Commit); ok {
			return x.Commit
		}
	}
	return nil
}

type isDatabaseEvent_EventType interface {
	isDatabaseEvent_EventType()
}

type DatabaseEvent_Status struct {
	Status *StreamStatus `protobuf:"bytes,1,opt,name=status,proto3,oneof"`
}

type DatabaseEvent_SnapshotBegin struct {
	SnapshotBegin *SnapshotBegin `protobuf:"bytes,2,opt,name=snapshot_begin,json=snapshotBegin,proto3,oneof"`
}

type DatabaseEvent_PageBegin struct {
	PageBegin *SnapshotPageBegin `protobuf:"bytes,3,opt,name=page_begin,json=pageBegin,proto3,oneof"`
}

type DatabaseEvent_SnapshotRow struct {
	SnapshotRow *SnapshotRow `protobuf:"bytes,4,opt,name=snapshot_row,json=snapshotRow,proto3,oneof"`
}

type DatabaseEvent_PageEnd struct {
	PageEnd *SnapshotPageEnd `protobuf:"bytes,5,opt,name=page_end,json=pageEnd,proto3,oneof"`
}

type DatabaseEvent_SnapshotEnd struct {
	SnapshotEnd *SnapshotEnd `protobuf:"bytes,6,opt,name=snapshot_end,json=snapshotEnd,proto3,oneof"`
}

type DatabaseEvent_SnapshotFailure struct {
	SnapshotFailure *SnapshotFailure `protobuf:"bytes,7,opt,name=snapshot_failure,json=snapshotFailure,proto3,oneof"`
}

type DatabaseEvent_Begin struct {
	Begin *TransactionBegin `protobuf:"bytes,8,opt,name=begin,proto3,oneof"`
}

type DatabaseEvent_Change struct {
	Change *ChangeEvent `protobuf:"bytes,9,opt,name=change,proto3,oneof"`
}

type DatabaseEvent_Commit struct {
	Commit *TransactionCommit `protobuf:"bytes,10,opt,name=commit,proto3,oneof"`
}

func (*DatabaseEvent_Status) isDatabaseEvent_EventType() {}

func (*DatabaseEvent_SnapshotBegin) isDatabaseEvent_EventType() {}

func (*DatabaseEvent_PageBegin) isDatabaseEvent_EventType() {}

func (*DatabaseEvent_SnapshotRow) isDatabaseEvent_EventType() {}

func (*DatabaseEvent_PageEnd) isDatabaseEvent_EventType() {}

func (*DatabaseEvent_SnapshotEnd) isDatabaseEvent_EventType() {}

func (*DatabaseEvent_SnapshotFailure) isDatabaseEvent_EventType() {}

func (*DatabaseEvent_Begin) isDatabaseEvent_EventType() {}

func (*DatabaseEvent_Change) isDatabaseEvent_EventType() {}

func (*DatabaseEvent_Commit) isDatabaseEvent_EventType() {}

type StreamStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         string                 `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamStatus) Reset() {
	*x = StreamStatus{}
	mi := &file_proto_dbstream_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamStatus) ProtoMessage() {}

func (x *StreamStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamStatus.ProtoReflect.Descriptor instead.
func (*StreamStatus) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{1}
}

func (x *StreamStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StreamStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StreamStatus) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type SnapshotBegin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tables        []string               `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotBegin) Reset() {
	*x = SnapshotBegin{}
	mi := &file_proto_dbstream_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBegin) ProtoMessage() {}

func (x *SnapshotBegin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBegin.ProtoReflect.Descriptor instead.
func (*SnapshotBegin) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{2}
}

func (x *SnapshotBegin) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *SnapshotBegin) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SnapshotBegin) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SnapshotPageBegin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNumber    int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	RowCount      int32                  `protobuf:"varint,2,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotPageBegin) Reset() {
	*x = SnapshotPageBegin{}
	mi := &file_proto_dbstream_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotPageBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotPageBegin) ProtoMessage() {}

func (x *SnapshotPageBegin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotPageBegin.ProtoReflect.Descriptor instead.
func (*SnapshotPageBegin) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{3}
}

func (x *SnapshotPageBegin) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *SnapshotPageBegin) GetRowCount() int32 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

type SnapshotRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Values        map[string]string      `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotRow) Reset() {
	*x = SnapshotRow{}
	mi := &file_proto_dbstream_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRow) ProtoMessage() {}

func (x *SnapshotRow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRow.ProtoReflect.Descriptor instead.
func (*SnapshotRow) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{4}
}

func (x *SnapshotRow) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *SnapshotRow) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

type SnapshotPageEnd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNumber    int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotPageEnd) Reset() {
	*x = SnapshotPageEnd{}
	mi := &file_proto_dbstream_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotPageEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotPageEnd) ProtoMessage() {}

func (x *SnapshotPageEnd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotPageEnd.ProtoReflect.Descriptor instead.
func (*SnapshotPageEnd) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{5}
}

func (x *SnapshotPageEnd) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type SnapshotEnd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Lsn           string                 `protobuf:"bytes,2,opt,name=lsn,proto3" json:"lsn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotEnd) Reset() {
	*x = SnapshotEnd{}
	mi := &file_proto_dbstream_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotEnd) ProtoMessage() {}

func (x *SnapshotEnd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotEnd.ProtoReflect.Descriptor instead.
func (*SnapshotEnd) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{6}
}

func (x *SnapshotEnd) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SnapshotEnd) GetLsn() string {
	if x != nil {
		return x.Lsn
	}
	return ""
}

type SnapshotFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorMessage  string                 `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotFailure) Reset() {
	*x = SnapshotFailure{}
	mi := &file_proto_dbstream_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotFailure) ProtoMessage() {}

func (x *SnapshotFailure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotFailure.ProtoReflect.Descriptor instead.
func (*SnapshotFailure) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{7}
}

func (x *SnapshotFailure) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SnapshotFailure) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type TransactionBegin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId uint32                 `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Lsn           string                 `protobuf:"bytes,3,opt,name=lsn,proto3" json:"lsn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionBegin) Reset() {
	*x = TransactionBegin{}
	mi := &file_proto_dbstream_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionBegin) ProtoMessage() {}

func (x *TransactionBegin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionBegin.ProtoReflect.Descriptor instead.
func (*TransactionBegin) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{8}
}

func (x *TransactionBegin) GetTransactionId() uint32 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *TransactionBegin) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransactionBegin) GetLsn() string {
	if x != nil {
		return x.Lsn
	}
	return ""
}

type ChangeEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId uint32                 `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	TableName     string                 `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Operation     string                 `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	OldValues     map[string]string      `protobuf:"bytes,5,rep,name=old_values,json=oldValues,proto3" json:"old_values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NewValues     map[string]string      `protobuf:"bytes,6,rep,name=new_values,json=newValues,proto3" json:"new_values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeEvent) Reset() {
	*x = ChangeEvent{}
	mi := &file_proto_dbstream_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeEvent) ProtoMessage() {}

func (x *ChangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeEvent.ProtoReflect.Descriptor instead.
func (*ChangeEvent) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{9}
}

func (x *ChangeEvent) GetTransactionId() uint32 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *ChangeEvent) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ChangeEvent) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *ChangeEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ChangeEvent) GetOldValues() map[string]string {
	if x != nil {
		return x.OldValues
	}
	return nil
}

func (x *ChangeEvent) GetNewValues() map[string]string {
	if x != nil {
		return x.NewValues
	}
	return nil
}

type TransactionCommit struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TransactionId   uint32                 `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	CommitTimestamp int64                  `protobuf:"varint,2,opt,name=commit_timestamp,json=commitTimestamp,proto3" json:"commit_timestamp,omitempty"`
	Lsn             string                 `protobuf:"bytes,3,opt,name=lsn,proto3" json:"lsn,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransactionCommit) Reset() {
	*x = TransactionCommit{}
	mi := &file_proto_dbstream_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionCommit) ProtoMessage() {}

func (x *TransactionCommit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionCommit.ProtoReflect.Descriptor instead.
func (*TransactionCommit) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{10}
}

func (x *TransactionCommit) GetTransactionId() uint32 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *TransactionCommit) GetCommitTimestamp() int64 {
	if x != nil {
		return x.CommitTimestamp
	}
	return 0
}

func (x *TransactionCommit) GetLsn() string {
	if x != nil {
		return x.Lsn
	}
	return ""
}

type StreamRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Tables                 []string               `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	IncludeSnapshot        bool                   `protobuf:"varint,2,opt,name=include_snapshot,json=includeSnapshot,proto3" json:"include_snapshot,omitempty"`
	LastKnownTransactionId uint32                 `protobuf:"varint,3,opt,name=last_known_transaction_id,json=lastKnownTransactionId,proto3" json:"last_known_transaction_id,omitempty"`
	PageSize               int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_proto_dbstream_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{11}
}

func (x *StreamRequest) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *StreamRequest) GetIncludeSnapshot() bool {
	if x != nil {
		return x.IncludeSnapshot
	}
	return false
}

func (x *StreamRequest) GetLastKnownTransactionId() uint32 {
	if x != nil {
		return x.LastKnownTransactionId
	}
	return 0
}

func (x *StreamRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type StopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_proto_dbstream_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{12}
}

type StopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_proto_dbstream_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dbstream_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_proto_dbstream_proto_rawDescGZIP(), []int{13}
}

func (x *StopResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_dbstream_proto protoreflect.FileDescriptor

const file_proto_dbstream_proto_rawDesc = "" +
	"\n" +
	"\x14proto/dbstream.proto\x12\bdbstream\"\xe3\x04\n" +
	"\rDatabaseEvent\x120\n" +
	"\x06status\x18\x01 \x01(\v2\x16.dbstream.StreamStatusH\x00R\x06status\x12@\n" +
	"\x0esnapshot_begin\x18\x02 \x01(\v2\x17.dbstream.SnapshotBeginH\x00R\rsnapshotBegin\x12<\n" +
	"\n" +
	"page_begin\x18\x03 \x01(\v2\x1b.dbstream.SnapshotPageBeginH\x00R\tpageBegin\x12:\n" +
	"\fsnapshot_row\x18\x04 \x01(\v2\x15.dbstream.SnapshotRowH\x00R\vsnapshotRow\x126\n" +
	"\bpage_end\x18\x05 \x01(\v2\x19.dbstream.SnapshotPageEndH\x00R\apageEnd\x12:\n" +
	"\fsnapshot_end\x18\x06 \x01(\v2\x15.dbstream.SnapshotEndH\x00R\vsnapshotEnd\x12F\n" +
	"\x10snapshot_failure\x18\a \x01(\v2\x19.dbstream.SnapshotFailureH\x00R\x0fsnapshotFailure\x122\n" +
	"\x05begin\x18\b \x01(\v2\x1a.dbstream.TransactionBeginH\x00R\x05begin\x12/\n" +
	"\x06change\x18\t \x01(\v2\x15.dbstream.ChangeEventH\x00R\x06change\x125\n" +
	"\x06commit\x18\n" +
	" \x01(\v2\x1b.dbstream.TransactionCommitH\x00R\x06commitB\f\n" +
	"\n" +
	"event_type\"\\\n" +
	"\fStreamStatus\x12\x14\n" +
	"\x05state\x18\x01 \x01(\tR\x05state\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"b\n" +
	"\rSnapshotBegin\x12\x16\n" +
	"\x06tables\x18\x01 \x03(\tR\x06tables\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"Q\n" +
	"\x11SnapshotPageBegin\x12\x1f\n" +
	"\vpage_number\x18\x01 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\trow_count\x18\x02 \x01(\x05R\browCount\"\xa2\x01\n" +
	"\vSnapshotRow\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x129\n" +
	"\x06values\x18\x02 \x03(\v2!.dbstream.SnapshotRow.ValuesEntryR\x06values\x1a9\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"2\n" +
	"\x0fSnapshotPageEnd\x12\x1f\n" +
	"\vpage_number\x18\x01 \x01(\x05R\n" +
	"pageNumber\"=\n" +
	"\vSnapshotEnd\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x10\n" +
	"\x03lsn\x18\x02 \x01(\tR\x03lsn\"T\n" +
	"\x0fSnapshotFailure\x12#\n" +
	"\rerror_message\x18\x01 \x01(\tR\ferrorMessage\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\"i\n" +
	"\x10TransactionBegin\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\rR\rtransactionId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x10\n" +
	"\x03lsn\x18\x03 \x01(\tR\x03lsn\"\x95\x03\n" +
	"\vChangeEvent\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\rR\rtransactionId\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12\x1c\n" +
	"\toperation\x18\x03 \x01(\tR\toperation\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12C\n" +
	"\n" +
	"old_values\x18\x05 \x03(\v2$.dbstream.ChangeEvent.OldValuesEntryR\toldValues\x12C\n" +
	"\n" +
	"new_values\x18\x06 \x03(\v2$.dbstream.ChangeEvent.NewValuesEntryR\tnewValues\x1a<\n" +
	"\x0eOldValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a<\n" +
	"\x0eNewValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"w\n" +
	"\x11TransactionCommit\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\rR\rtransactionId\x12)\n" +
	"\x10commit_timestamp\x18\x02 \x01(\x03R\x0fcommitTimestamp\x12\x10\n" +
	"\x03lsn\x18\x03 \x01(\tR\x03lsn\"\xaa\x01\n" +
	"\rStreamRequest\x12\x16\n" +
	"\x06tables\x18\x01 \x03(\tR\x06tables\x12)\n" +
	"\x10include_snapshot\x18\x02 \x01(\bR\x0fincludeSnapshot\x129\n" +
	"\x19last_known_transaction_id\x18\x03 \x01(\rR\x16lastKnownTransactionId\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"\r\n" +
	"\vStopRequest\"(\n" +
	"\fStopResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\xde\x01\n" +
	"\x14DatabaseChangeStream\x12C\n" +
	"\vStartStream\x12\x17.dbstream.StreamRequest\x1a\x17.dbstream.DatabaseEvent\"\x000\x01\x12=\n" +
	"\n" +
	"StopStream\x12\x15.dbstream.StopRequest\x1a\x16.dbstream.StopResponse\"\x00\x12B\n" +
	"\n" +
	"SyncStream\x12\x17.dbstream.StreamRequest\x1a\x17.dbstream.DatabaseEvent\"\x000\x01B\tZ\a./protob\x06proto3"

var (
	file_proto_dbstream_proto_rawDescOnce sync.Once
	file_proto_dbstream_proto_rawDescData []byte
)

func file_proto_dbstream_proto_rawDescGZIP() []byte {
	file_proto_dbstream_proto_rawDescOnce.Do(func() {
		file_proto_dbstream_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_dbstream_proto_rawDesc), len(file_proto_dbstream_proto_rawDesc)))
	})
	return file_proto_dbstream_proto_rawDescData
}

var file_proto_dbstream_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_dbstream_proto_goTypes = []any{
	(*DatabaseEvent)(nil),     // 0: dbstream.DatabaseEvent
	(*StreamStatus)(nil),      // 1: dbstream.StreamStatus
	(*SnapshotBegin)(nil),     // 2: dbstream.SnapshotBegin
	(*SnapshotPageBegin)(nil), // 3: dbstream.SnapshotPageBegin
	(*SnapshotRow)(nil),       // 4: dbstream.SnapshotRow
	(*SnapshotPageEnd)(nil),   // 5: dbstream.SnapshotPageEnd
	(*SnapshotEnd)(nil),       // 6: dbstream.SnapshotEnd
	(*SnapshotFailure)(nil),   // 7: dbstream.SnapshotFailure
	(*TransactionBegin)(nil),  // 8: dbstream.TransactionBegin
	(*ChangeEvent)(nil),       // 9: dbstream.ChangeEvent
	(*TransactionCommit)(nil), // 10: dbstream.TransactionCommit
	(*StreamRequest)(nil),     // 11: dbstream.StreamRequest
	(*StopRequest)(nil),       // 12: dbstream.StopRequest
	(*StopResponse)(nil),      // 13: dbstream.StopResponse
	nil,                       // 14: dbstream.SnapshotRow.ValuesEntry
	nil,                       // 15: dbstream.ChangeEvent.OldValuesEntry
	nil,                       // 16: dbstream.ChangeEvent.NewValuesEntry
}
var file_proto_dbstream_proto_depIdxs = []int32{
	1,  // 0: dbstream.DatabaseEvent.status:type_name -> dbstream.StreamStatus
	2,  // 1: dbstream.DatabaseEvent.snapshot_begin:type_name -> dbstream.SnapshotBegin
	3,  // 2: dbstream.DatabaseEvent.page_begin:type_name -> dbstream.SnapshotPageBegin
	4,  // 3: dbstream.DatabaseEvent.snapshot_row:type_name -> dbstream.SnapshotRow
	5,  // 4: dbstream.DatabaseEvent.page_end:type_name -> dbstream.SnapshotPageEnd
	6,  // 5: dbstream.DatabaseEvent.snapshot_end:type_name -> dbstream.SnapshotEnd
	7,  // 6: dbstream.DatabaseEvent.snapshot_failure:type_name -> dbstream.SnapshotFailure
	8,  // 7: dbstream.DatabaseEvent.begin:type_name -> dbstream.TransactionBegin
	9,  // 8: dbstream.DatabaseEvent.change:type_name -> dbstream.ChangeEvent
	10, // 9: dbstream.DatabaseEvent.commit:type_name -> dbstream.TransactionCommit
	14, // 10: dbstream.SnapshotRow.values:type_name -> dbstream.SnapshotRow.ValuesEntry
	15, // 11: dbstream.ChangeEvent.old_values:type_name -> dbstream.ChangeEvent.OldValuesEntry
	16, // 12: dbstream.ChangeEvent.new_values:type_name -> dbstream.ChangeEvent.NewValuesEntry
	11, // 13: dbstream.DatabaseChangeStream.StartStream:input_type -> dbstream.StreamRequest
	12, // 14: dbstream.DatabaseChangeStream.StopStream:input_type -> dbstream.StopRequest
	11, // 15: dbstream.DatabaseChangeStream.SyncStream:input_type -> dbstream.StreamRequest
	0,  // 16: dbstream.DatabaseChangeStream.StartStream:output_type -> dbstream.DatabaseEvent
	13, // 17: dbstream.DatabaseChangeStream.StopStream:output_type -> dbstream.StopResponse
	0,  // 18: dbstream.DatabaseChangeStream.SyncStream:output_type -> dbstream.DatabaseEvent
	16, // [16:19] is the sub-list for method output_type
	13, // [13:16] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_dbstream_proto_init() }
func file_proto_dbstream_proto_init() {
	if File_proto_dbstream_proto != nil {
		return
	}
	file_proto_dbstream_proto_msgTypes[0].OneofWrappers = []any{
		(*DatabaseEvent_Status)(nil),
		(*DatabaseEvent_SnapshotBegin)(nil),
		(*DatabaseEvent_PageBegin)(nil),
		(*DatabaseEvent_SnapshotRow)(nil),
		(*DatabaseEvent_PageEnd)(nil),
		(*DatabaseEvent_SnapshotEnd)(nil),
		(*DatabaseEvent_SnapshotFailure)(nil),
		(*DatabaseEvent_Begin)(nil),
		(*DatabaseEvent_Change)(nil),
		(*DatabaseEvent_Commit)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_dbstream_proto_rawDesc), len(file_proto_dbstream_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dbstream_proto_goTypes,
		DependencyIndexes: file_proto_dbstream_proto_depIdxs,
		MessageInfos:      file_proto_dbstream_proto_msgTypes,
	}.Build()
	File_proto_dbstream_proto = out.File
	file_proto_dbstream_proto_goTypes = nil
	file_proto_dbstream_proto_depIdxs = nil
}
